#!/bin/bash -e

if [ "x${VERSION}" == "x" ]; then
  echo 'You must specify the VERSION environment variable. This is the version you are releasing.'
  exit 1
fi
if [ "x${AWS_ACCESS_KEY_ID}" == "x" ]; then
  echo 'Missing required AWS_ACCESS_KEY_ID environment variable.'
  exit 1
fi
if [ "x${AWS_SECRET_ACCESS_KEY}" == "x" ]; then
  echo 'Missing required AWS_SECRET_ACCESS_KEY environment variable.'
  exit 1
fi
if [ "x${BUCKET}" == "x" ]; then
  echo 'Missing required BUCKET environment variable.'
  exit 1
fi

if ! grep -q 'VERSION = "'${VERSION}'"' config/constants.go ; then
  echo ''${VERSION}' not found in config/constants. Please update the version in config/constants.go before proceeding'
  exit 1
fi

if ! grep -q '"PackageVersion": "'${VERSION}'",' .goxc.json ; then
  echo 'Incorrect version found in .goxc.json, automatically setting to '${VERSION}''
  goxc -wc -pv=${VERSION}
fi

rm -rf builds/

echo 'Building version '${VERSION}' binaries'
goxc validate compile

mkdir -p builds/${VERSION}/binaries
CURRENT_DIR=`pwd`
cd builds/${VERSION}

for d in * ; do
  if [ "$d" != "binaries" ]; then
    echo '{
    "Version": "'${VERSION}'",
    "Sha256": "'$(openssl dgst -sha256 -binary $d/catalyze* | openssl base64)'"
}' > $d.json
    mv $d/catalyze* binaries/$d
    rm -rf $d
    gzip binaries/$d
  fi
done

cd ${CURRENT_DIR}

echo 'Syncing S3 data to the public/ directory'
rm -rf public/*
aws s3 sync s3://${BUCKET}/catalyze public/

echo 'Copying version '${VERSION}' binaries'
rm -rf public/${VERSION} # only for testing
mkdir public/${VERSION}
mv builds/${VERSION}/binaries/* public/${VERSION}
mv -f builds/${VERSION}/*.json public/

if [ "x${TEST}" == "xfalse" ]; then
  echo 'Publishing to S3'
  aws s3 sync public/ s3://${BUCKET}/catalyze --delete --exclude "*.DS_Store"

  echo 'Releasing to Github'
  goxc
else
  echo 'Test mode enabled, skipping S3 upload and Github release'
  ls -al
  ls -al public
  ls -al public/${VERSION}
fi
